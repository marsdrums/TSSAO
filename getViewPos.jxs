<jittershader name="default">
	<description>Default Slab </description>
	<param name="norDepthBuf" 		type="int" 		default="0" />
	<param name="MVP" 				type="mat4" 	state="MODELVIEW_PROJECTION_MATRIX" />
	<param name="uv"   				type="vec2"   	state="TEXCOORD" />
	<param name="textureMatrix0" 	type="mat4" 	state="TEXTURE0_MATRIX" />
	<param name="pos" 				type="vec3" 	state="POSITION" />
	<param name="farClip" 			type="float" 	state="FAR_CLIP" />
	<param name="farCorner" 		type="vec3" 	state="FAR_CORNER" />	
	<language name="glsl" version="1.5">
		<bind param="norDepthBuf" 		program="fp" />
		<bind param="MVP" 				program="vp" />
		<bind param="uv"   				program="vp" />
		<bind param="textureMatrix0" 	program="vp" />
		<bind param="pos" 				program="vp" />
		<bind param="farCorner"  		program="vp" />
		<bind param="farClip"   		program="fp" />
<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core

in vec3 pos;
in vec2 uv;

uniform mat4 MVP;
uniform mat4 textureMatrix0;
uniform vec3 farCorner;


out jit_PerVertex {
	smooth vec2 uv;
	smooth vec3 rd;
} jit_out;

void main(void) {
	gl_Position = MVP*vec4(pos, 1.);
	//vec2 uv = 0.5 * (gl_Position.xy + vec2(1.));
	jit_out.uv = vec2(textureMatrix0*vec4(uv, 1., 1.)).xy;
	jit_out.rd = farCorner * vec3(gl_Position.xy, 1);
}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core
#define TWOPI 6.28318531
#define PI 3.14159265

uniform sampler2DRect 	norDepthBuf;
uniform float 			farClip;

in jit_PerVertex {
	smooth vec2 uv;
	smooth vec3 rd;
} jit_in;

layout (location = 0) out vec4 vPos;

void main(void) {

	vec4 	norDepth 	= texture(norDepthBuf, jit_in.uv);
	float 	depth 		= norDepth.w;
	// Calculate depth of fragment;
	vec3 	rd 		= normalize(jit_in.rd);
	 		vPos 	= vec4(rd * farClip * depth, 1.);

}
]]>
</program>
	</language>
</jittershader>
